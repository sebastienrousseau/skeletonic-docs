{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"The Skeletonic Stylus Library \u00b6 Overview \u00b6 The Skeletonic Stylus Library is a lightweight, intuitive, accessible and ultra-responsive library based on the Stylus CSS language, providing a robust, scalable and cross-browser CSS framework. The library provides modular components built for speed, higher performance, with the aim of helping you come to grips with common pain points in mobile and web application design and development. Whether you\u2019re looking to integrate a common set of components into an existing website or mobile app, or need more control over the components, we\u2019ve got you covered. Languages \u00b6 English (docs.skeletonic.io) Fran\u00e7ais (docs.skeletonic.io) Getting Started \u00b6 The Skeletonic Stylus Library is a collection of components, functions, and mixins made with Stylus . The components and mixins can be used on their own to build modern web sites and applications, but they are also designed to be used in combination with a wide variety of existing technologies. Other Sources \u00b6 Here are some other great places to find information about the Skeletonic Stylus Library. Name Description Link Documentation Documentation of the Skeletonic Stylus Library. visit \u2192 Source Code Learn how Skeletonic CSS works under the hood. visit \u2192 GitHub Issues Report bugs or request features on GitHub. visit \u2192 Acknowledgements \u00b6 The Skeletonic Stylus Library is beautifully crafted by these people and a bunch of awesome contributors Sebastien Rousseau","title":"Welcome"},{"location":"index.html#the-skeletonic-stylus-library","text":"","title":"The Skeletonic Stylus Library"},{"location":"index.html#overview","text":"The Skeletonic Stylus Library is a lightweight, intuitive, accessible and ultra-responsive library based on the Stylus CSS language, providing a robust, scalable and cross-browser CSS framework. The library provides modular components built for speed, higher performance, with the aim of helping you come to grips with common pain points in mobile and web application design and development. Whether you\u2019re looking to integrate a common set of components into an existing website or mobile app, or need more control over the components, we\u2019ve got you covered.","title":"Overview"},{"location":"index.html#languages","text":"English (docs.skeletonic.io) Fran\u00e7ais (docs.skeletonic.io)","title":"Languages"},{"location":"index.html#getting-started","text":"The Skeletonic Stylus Library is a collection of components, functions, and mixins made with Stylus . The components and mixins can be used on their own to build modern web sites and applications, but they are also designed to be used in combination with a wide variety of existing technologies.","title":"Getting Started"},{"location":"index.html#other-sources","text":"Here are some other great places to find information about the Skeletonic Stylus Library. Name Description Link Documentation Documentation of the Skeletonic Stylus Library. visit \u2192 Source Code Learn how Skeletonic CSS works under the hood. visit \u2192 GitHub Issues Report bugs or request features on GitHub. visit \u2192","title":"Other Sources"},{"location":"index.html#acknowledgements","text":"The Skeletonic Stylus Library is beautifully crafted by these people and a bunch of awesome contributors Sebastien Rousseau","title":"Acknowledgements"},{"location":"animations.html","text":"Animations \u00b6 Skeletonic CSS library provides ready-to-use, cross-browser transitions, transformations, and animations utilities. Installation and usage \u00b6 You will need to import skeletonic-animations.css to display the transitions and animations. The CSS animations are based/inspired by Animate.css (Another thing from Daniel Eden ). Animation styles \u00b6 Skeletonic CSS allow you to easily create flexible UI transitions and animations. Here\u2019s the list of all the CSS Animations and Transitions: Name Description bounce Make an element to bounce up and down. chameleon Make a text or background color to loop through an array of colors. fade Make an element to come gradually into or out of view. blink Make an element to flash. pop Make an element to pop into or out view. pulsate Make an element to pulsate. spin Make an element to spin in place. shake Make an element to move from side to side. vanish Make an element to gradually disappear. wobble Make an element to move unsteadily from side to side. zoom Make an element to zoom into or out view","title":"Overview"},{"location":"animations.html#animations","text":"Skeletonic CSS library provides ready-to-use, cross-browser transitions, transformations, and animations utilities.","title":"Animations"},{"location":"animations.html#installation-and-usage","text":"You will need to import skeletonic-animations.css to display the transitions and animations. The CSS animations are based/inspired by Animate.css (Another thing from Daniel Eden ).","title":"Installation and usage"},{"location":"animations.html#animation-styles","text":"Skeletonic CSS allow you to easily create flexible UI transitions and animations. Here\u2019s the list of all the CSS Animations and Transitions: Name Description bounce Make an element to bounce up and down. chameleon Make a text or background color to loop through an array of colors. fade Make an element to come gradually into or out of view. blink Make an element to flash. pop Make an element to pop into or out view. pulsate Make an element to pulsate. spin Make an element to spin in place. shake Make an element to move from side to side. vanish Make an element to gradually disappear. wobble Make an element to move unsteadily from side to side. zoom Make an element to zoom into or out view","title":"Animation styles"},{"location":"buttons.html","text":"Buttons \u00b6 Overview \u00b6 Buttons allow users to take actions, and make choices, with a single click or tap on a page or a screen. A suite of modern button styling options you can use to make user interaction even more engaging.","title":"Overview"},{"location":"buttons.html#buttons","text":"","title":"Buttons"},{"location":"buttons.html#overview","text":"Buttons allow users to take actions, and make choices, with a single click or tap on a page or a screen. A suite of modern button styling options you can use to make user interaction even more engaging.","title":"Overview"},{"location":"cards.html","text":"Cards \u00b6 A card presents high-level information and can guide the user toward related actions and details. CSS cards provide convenient flexbox layouts for different types of content like title, images etc.","title":"Overview"},{"location":"cards.html#cards","text":"A card presents high-level information and can guide the user toward related actions and details. CSS cards provide convenient flexbox layouts for different types of content like title, images etc.","title":"Cards"},{"location":"code.html","text":"Code \u00b6 Skeletonic CSS provides styling for inline code tags to display code snippet into the web browser. HTML Code Element \u00b6 The HTML <code> element is used to define a piece of computer code. The content inside is displayed in the browser\u2019s default monospace font. For inline code, you can use the <code> element. <code>import \"skeletonic\" void main () { print ( \"Hello Skeletonic\" )} </code> Code block \u00b6 The <code> element does not preserve extra whitespace and line-breaks.To fix this, you can put the <code> element inside a <pre> element: <code> <pre> import \"skeletonic\" void main () { print ( \"Hello Skeletonic\" ) } </pre> </code> Code block colours \u00b6 <code class = \"primary padding-1\" >Primary</code> <code class = \"secondary padding-1\" >Secondary</code> <code class = \"success padding-1\" >Success</code> <code class = \"info padding-1\" >Info</code> <code class = \"warning padding-1\" >Warning</code> <code class = \"error padding-1\" >Error</code> HTML var Element for variables \u00b6 The HTML <var> element is used to define a variable in programming or in a mathematical expression. The content inside is typically displayed in italic. Skeletonic CSS Version: <var>v<var> where v is equal to: 1 .0.6","title":"Overview"},{"location":"code.html#code","text":"Skeletonic CSS provides styling for inline code tags to display code snippet into the web browser.","title":"Code"},{"location":"code.html#html-code-element","text":"The HTML <code> element is used to define a piece of computer code. The content inside is displayed in the browser\u2019s default monospace font. For inline code, you can use the <code> element. <code>import \"skeletonic\" void main () { print ( \"Hello Skeletonic\" )} </code>","title":"HTML Code Element"},{"location":"code.html#code-block","text":"The <code> element does not preserve extra whitespace and line-breaks.To fix this, you can put the <code> element inside a <pre> element: <code> <pre> import \"skeletonic\" void main () { print ( \"Hello Skeletonic\" ) } </pre> </code>","title":"Code block"},{"location":"code.html#code-block-colours","text":"<code class = \"primary padding-1\" >Primary</code> <code class = \"secondary padding-1\" >Secondary</code> <code class = \"success padding-1\" >Success</code> <code class = \"info padding-1\" >Info</code> <code class = \"warning padding-1\" >Warning</code> <code class = \"error padding-1\" >Error</code>","title":"Code block colours"},{"location":"code.html#html-var-element-for-variables","text":"The HTML <var> element is used to define a variable in programming or in a mathematical expression. The content inside is typically displayed in italic. Skeletonic CSS Version: <var>v<var> where v is equal to: 1 .0.6","title":"HTML var Element for variables"},{"location":"folder-structure.html","text":"Folder Structure \u00b6 Now that you\u2019ve created, built, and run your first Skeletonic website or application, let\u2019s take a moment to familiarize yourself with the Skeletonic Stylus Library\u2019s folder structure. Sources \u00b6 Within the download folder you\u2019ll find all the Stylus source files, compiled and minified CSS bundles as well as CSS sourcemaps grouped into a dist folder. dist \u00b6 Below is the typical folder structure for the Skeletonic Stylus Library package. skeletonic-1.0.6 dist \u251c\u2500\u2500 README.md \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 skeletonic-animations.css \u2502 \u251c\u2500\u2500 skeletonic-animations.css.map \u2502 \u251c\u2500\u2500 skeletonic-animations.min.css \u2502 \u251c\u2500\u2500 skeletonic-colors.css \u2502 \u251c\u2500\u2500 skeletonic-colors.css.map \u2502 \u251c\u2500\u2500 skeletonic-colors.min.css \u2502 \u251c\u2500\u2500 skeletonic-fonts.css \u2502 \u251c\u2500\u2500 skeletonic-fonts.css.map \u2502 \u251c\u2500\u2500 skeletonic-fonts.min.css \u2502 \u251c\u2500\u2500 skeletonic-hebrew-fonts.css \u2502 \u251c\u2500\u2500 skeletonic-hebrew-fonts.css.map \u2502 \u251c\u2500\u2500 skeletonic-hebrew-fonts.min.css \u2502 \u251c\u2500\u2500 skeletonic.css \u2502 \u251c\u2500\u2500 skeletonic.css.map \u2502 \u2514\u2500\u2500 skeletonic.min.css \u251c\u2500\u2500 filesize-report.txt \u251c\u2500\u2500 images \u2502 \u251c\u2500\u2500 button-primary.svg \u2502 \u251c\u2500\u2500 button-secondary.svg \u2502 \u251c\u2500\u2500 skeletonic-stylus-readme.svg \u2502 \u2514\u2500\u2500 skeletonic-stylus.svg \u251c\u2500\u2500 package.json \u2514\u2500\u2500 stylus \u251c\u2500\u2500 README.md \u251c\u2500\u2500 animations \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 _contents.styl \u2502 \u251c\u2500\u2500 bounce.styl \u2502 \u251c\u2500\u2500 chameleon.styl \u2502 \u251c\u2500\u2500 fade-in.styl \u2502 \u251c\u2500\u2500 fade-out.styl \u2502 \u251c\u2500\u2500 flash.styl \u2502 \u251c\u2500\u2500 pop-in.styl \u2502 \u251c\u2500\u2500 pulse.styl \u2502 \u251c\u2500\u2500 rotation.styl \u2502 \u251c\u2500\u2500 shake.styl \u2502 \u251c\u2500\u2500 vanish-in.styl \u2502 \u251c\u2500\u2500 vanish-out.styl \u2502 \u251c\u2500\u2500 wobble.styl \u2502 \u2514\u2500\u2500 zoom-in.styl \u251c\u2500\u2500 base \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 _contents.styl \u2502 \u251c\u2500\u2500 helpers.styl \u2502 \u2514\u2500\u2500 reset.styl \u251c\u2500\u2500 components \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 _contents.styl \u2502 \u251c\u2500\u2500 card.styl \u2502 \u251c\u2500\u2500 header.styl \u2502 \u2514\u2500\u2500 navbar.styl \u251c\u2500\u2500 configurations \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 _contents.styl \u2502 \u251c\u2500\u2500 colors.styl \u2502 \u2514\u2500\u2500 variables.styl \u251c\u2500\u2500 debugging \u2502 \u251c\u2500\u2500 base64 \u2502 \u2514\u2500\u2500 images \u251c\u2500\u2500 elements \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 _contents.styl \u2502 \u251c\u2500\u2500 button.styl \u2502 \u251c\u2500\u2500 clipboard.styl \u2502 \u251c\u2500\u2500 code.styl \u2502 \u251c\u2500\u2500 divider.styl \u2502 \u251c\u2500\u2500 fieldset.styl \u2502 \u251c\u2500\u2500 form.styl \u2502 \u251c\u2500\u2500 image.styl \u2502 \u251c\u2500\u2500 label.styl \u2502 \u251c\u2500\u2500 link-effects.styl \u2502 \u251c\u2500\u2500 link.styl \u2502 \u251c\u2500\u2500 list.styl \u2502 \u251c\u2500\u2500 margin.styl \u2502 \u251c\u2500\u2500 padding.styl \u2502 \u2514\u2500\u2500 table.styl \u251c\u2500\u2500 fonts \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 _contents.styl \u2502 \u251c\u2500\u2500 open-sans-hebrew.styl \u2502 \u2514\u2500\u2500 open-sans.styl \u251c\u2500\u2500 layout \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 _contents.styl \u2502 \u251c\u2500\u2500 container.styl \u2502 \u251c\u2500\u2500 grid.styl \u2502 \u2514\u2500\u2500 media-queries.styl \u251c\u2500\u2500 palettes \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 _contents.styl \u2502 \u251c\u2500\u2500 material.styl \u2502 \u251c\u2500\u2500 tachyons.styl \u2502 \u2514\u2500\u2500 websafe.styl \u251c\u2500\u2500 skeletonic.styl \u2514\u2500\u2500 utilities \u251c\u2500\u2500 README.md \u251c\u2500\u2500 _contents.styl \u2514\u2500\u2500 mixins.styl 15 directories, 85 files The sections below explain each part of the folder structure in more detail. css \u00b6 This folder contains the processed CSS files needed to style your web site or application. images \u00b6 This folder contains the documentation images (README.md files). stylus \u00b6 This folder contains all the Stylus source files (.styl) organized in subfolders for better file organization and code scalability.","title":"Folder Structure"},{"location":"folder-structure.html#folder-structure","text":"Now that you\u2019ve created, built, and run your first Skeletonic website or application, let\u2019s take a moment to familiarize yourself with the Skeletonic Stylus Library\u2019s folder structure.","title":"Folder Structure"},{"location":"folder-structure.html#sources","text":"Within the download folder you\u2019ll find all the Stylus source files, compiled and minified CSS bundles as well as CSS sourcemaps grouped into a dist folder.","title":"Sources"},{"location":"folder-structure.html#dist","text":"Below is the typical folder structure for the Skeletonic Stylus Library package. skeletonic-1.0.6 dist \u251c\u2500\u2500 README.md \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 skeletonic-animations.css \u2502 \u251c\u2500\u2500 skeletonic-animations.css.map \u2502 \u251c\u2500\u2500 skeletonic-animations.min.css \u2502 \u251c\u2500\u2500 skeletonic-colors.css \u2502 \u251c\u2500\u2500 skeletonic-colors.css.map \u2502 \u251c\u2500\u2500 skeletonic-colors.min.css \u2502 \u251c\u2500\u2500 skeletonic-fonts.css \u2502 \u251c\u2500\u2500 skeletonic-fonts.css.map \u2502 \u251c\u2500\u2500 skeletonic-fonts.min.css \u2502 \u251c\u2500\u2500 skeletonic-hebrew-fonts.css \u2502 \u251c\u2500\u2500 skeletonic-hebrew-fonts.css.map \u2502 \u251c\u2500\u2500 skeletonic-hebrew-fonts.min.css \u2502 \u251c\u2500\u2500 skeletonic.css \u2502 \u251c\u2500\u2500 skeletonic.css.map \u2502 \u2514\u2500\u2500 skeletonic.min.css \u251c\u2500\u2500 filesize-report.txt \u251c\u2500\u2500 images \u2502 \u251c\u2500\u2500 button-primary.svg \u2502 \u251c\u2500\u2500 button-secondary.svg \u2502 \u251c\u2500\u2500 skeletonic-stylus-readme.svg \u2502 \u2514\u2500\u2500 skeletonic-stylus.svg \u251c\u2500\u2500 package.json \u2514\u2500\u2500 stylus \u251c\u2500\u2500 README.md \u251c\u2500\u2500 animations \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 _contents.styl \u2502 \u251c\u2500\u2500 bounce.styl \u2502 \u251c\u2500\u2500 chameleon.styl \u2502 \u251c\u2500\u2500 fade-in.styl \u2502 \u251c\u2500\u2500 fade-out.styl \u2502 \u251c\u2500\u2500 flash.styl \u2502 \u251c\u2500\u2500 pop-in.styl \u2502 \u251c\u2500\u2500 pulse.styl \u2502 \u251c\u2500\u2500 rotation.styl \u2502 \u251c\u2500\u2500 shake.styl \u2502 \u251c\u2500\u2500 vanish-in.styl \u2502 \u251c\u2500\u2500 vanish-out.styl \u2502 \u251c\u2500\u2500 wobble.styl \u2502 \u2514\u2500\u2500 zoom-in.styl \u251c\u2500\u2500 base \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 _contents.styl \u2502 \u251c\u2500\u2500 helpers.styl \u2502 \u2514\u2500\u2500 reset.styl \u251c\u2500\u2500 components \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 _contents.styl \u2502 \u251c\u2500\u2500 card.styl \u2502 \u251c\u2500\u2500 header.styl \u2502 \u2514\u2500\u2500 navbar.styl \u251c\u2500\u2500 configurations \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 _contents.styl \u2502 \u251c\u2500\u2500 colors.styl \u2502 \u2514\u2500\u2500 variables.styl \u251c\u2500\u2500 debugging \u2502 \u251c\u2500\u2500 base64 \u2502 \u2514\u2500\u2500 images \u251c\u2500\u2500 elements \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 _contents.styl \u2502 \u251c\u2500\u2500 button.styl \u2502 \u251c\u2500\u2500 clipboard.styl \u2502 \u251c\u2500\u2500 code.styl \u2502 \u251c\u2500\u2500 divider.styl \u2502 \u251c\u2500\u2500 fieldset.styl \u2502 \u251c\u2500\u2500 form.styl \u2502 \u251c\u2500\u2500 image.styl \u2502 \u251c\u2500\u2500 label.styl \u2502 \u251c\u2500\u2500 link-effects.styl \u2502 \u251c\u2500\u2500 link.styl \u2502 \u251c\u2500\u2500 list.styl \u2502 \u251c\u2500\u2500 margin.styl \u2502 \u251c\u2500\u2500 padding.styl \u2502 \u2514\u2500\u2500 table.styl \u251c\u2500\u2500 fonts \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 _contents.styl \u2502 \u251c\u2500\u2500 open-sans-hebrew.styl \u2502 \u2514\u2500\u2500 open-sans.styl \u251c\u2500\u2500 layout \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 _contents.styl \u2502 \u251c\u2500\u2500 container.styl \u2502 \u251c\u2500\u2500 grid.styl \u2502 \u2514\u2500\u2500 media-queries.styl \u251c\u2500\u2500 palettes \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 _contents.styl \u2502 \u251c\u2500\u2500 material.styl \u2502 \u251c\u2500\u2500 tachyons.styl \u2502 \u2514\u2500\u2500 websafe.styl \u251c\u2500\u2500 skeletonic.styl \u2514\u2500\u2500 utilities \u251c\u2500\u2500 README.md \u251c\u2500\u2500 _contents.styl \u2514\u2500\u2500 mixins.styl 15 directories, 85 files The sections below explain each part of the folder structure in more detail.","title":"dist"},{"location":"folder-structure.html#css","text":"This folder contains the processed CSS files needed to style your web site or application.","title":"css"},{"location":"folder-structure.html#images","text":"This folder contains the documentation images (README.md files).","title":"images"},{"location":"folder-structure.html#stylus","text":"This folder contains all the Stylus source files (.styl) organized in subfolders for better file organization and code scalability.","title":"stylus"},{"location":"hello-skeletonic.html","text":"Hello Skeletonic \u00b6 Getting started with the Skeletonic Stylus Library is almost effortless. This guide will take you step by step through creating a simple web page, building it, and running it locally on a web server. Prerequisites \u00b6 Download and install Node.js \u00b6 Note The prerequisites listed below are the minimum requirements for completing this first app demo. If you haven\u2019t installed Node yet, download the latest stable release of Node.js . Set Up Your First Website \u00b6 Create Your Site \u00b6 The first step is to create a new folder for your project and change into the newly created folder. Open up your terminal and enter the following: mkdir hello && cd hello Once the command finishes, let\u2019s initialize our package.json file: npm init Now let\u2019s install skeletonic-stylus and list skeletonic-stylus as a dev dependency in our package.json npm install --save-dev skeletonic-stylus NPM will automatically begin downloading the Skeletonic Stylus Library, the library is lightweight, so even if you are on a slow internet connection it shouldn\u2019t take too much time to download. Let\u2019s continue by creating an empty HTML file and a folder to store the Skeletonic CSS files. To do so, in Terminal run: touch index.html && mkdir css We can now copy all the Skeletonic\u2019s CSS files into our newly created folder cp node_modules/skeletonic-stylus/css/*.css css/ To get started right away, you can use this HTML starter template. Just copy/paste this code in the index.html file: <!DOCTYPE html> < html lang = \"en\" itemscope = \"\" itemtype = \"http://schema.org/WebPage\" > < head > < meta charset = \"UTF-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < title > Hello, Skeletonic! </ title > < link href = \"css/skeletonic.min.css\" rel = \"stylesheet\" > < link href = \"css/skeletonic-fonts.min.css\" rel = \"stylesheet\" > < link href = \"css/skeletonic-colors.min.css\" rel = \"stylesheet\" > < link href = \"css/skeletonic-animations.min.css\" rel = \"stylesheet\" > </ head > < body > < div id = \"navigation\" > < input type = \"checkbox\" class = \"hamburger\" id = \"hamburger\" name = \"hamburger\" > < label title = \"Open the menu\" for = \"hamburger\" class = \"hamburger-toggle cl-white\" aria-hidden = \"true\" > < span class = \"hidden\" aria-hidden = \"true\" > Main menu </ span > < span class = \"spinner diagonal part-1\" ></ span > < span class = \"spinner horizontal\" ></ span > < span class = \"spinner diagonal part-2\" ></ span > </ label > < nav id = \"sidebar\" > < ul class = \"nav\" > < li >< a href = \"/\" > Home </ a ></ li > </ ul > </ nav > </ div > < main class = \"container center text-center\" > < h1 > Hello, Skeletonic! </ h1 > < p > Welcome to your new app. </ p > < hr class = \"hr-text\" data-content = \"Skeletonic\" > < div class = \"card info padding-1\" > < div class = \"card-content\" > < h2 > How is Skeletonic for you? </ h2 > < p > \u2b50 We appreciate your star rating and feedback. If you ever have any questions or concerns, we're here for you. In the meantime, have a great day! </ p > < button class = \"primary center\" > Button </ button > < button class = \"secondary center\" > Button </ button > </ div > </ div > < hr class = \"hr-text\" data-content = \"Thank you!\" > </ main > </ body > </ html > Publish Your Site \u00b6 Initial Setup \u00b6 Install the http-server package from npm Open a command prompt / command line window and enter the following: npm install --save-dev http-server and put in your package.json: \"scripts\": { \"start\": \"http-server .\", \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\" } Deploy Your Site \u00b6 In the terminal window, copy and paste the following command to run the app in a local web server from our directory: npm start This will build and start the app. Once running you should see the following in your console: Starting up http-server, serving . Available on: http://127.0.0.1:8080 http://192.168.86.28:8080 Hit CTRL-C to stop the server Preview Your Site \u00b6 Open your web browser, and visit http://127.0.0.1:8080 You should see the following page: Congratulations on creating, building, and running your first Skeletonic app! \ud83c\udf89","title":"Hello Skeletonic"},{"location":"hello-skeletonic.html#hello-skeletonic","text":"Getting started with the Skeletonic Stylus Library is almost effortless. This guide will take you step by step through creating a simple web page, building it, and running it locally on a web server.","title":"Hello Skeletonic"},{"location":"hello-skeletonic.html#prerequisites","text":"","title":"Prerequisites"},{"location":"hello-skeletonic.html#download-and-install-nodejs","text":"Note The prerequisites listed below are the minimum requirements for completing this first app demo. If you haven\u2019t installed Node yet, download the latest stable release of Node.js .","title":"Download and install Node.js"},{"location":"hello-skeletonic.html#set-up-your-first-website","text":"","title":"Set Up Your First Website"},{"location":"hello-skeletonic.html#create-your-site","text":"The first step is to create a new folder for your project and change into the newly created folder. Open up your terminal and enter the following: mkdir hello && cd hello Once the command finishes, let\u2019s initialize our package.json file: npm init Now let\u2019s install skeletonic-stylus and list skeletonic-stylus as a dev dependency in our package.json npm install --save-dev skeletonic-stylus NPM will automatically begin downloading the Skeletonic Stylus Library, the library is lightweight, so even if you are on a slow internet connection it shouldn\u2019t take too much time to download. Let\u2019s continue by creating an empty HTML file and a folder to store the Skeletonic CSS files. To do so, in Terminal run: touch index.html && mkdir css We can now copy all the Skeletonic\u2019s CSS files into our newly created folder cp node_modules/skeletonic-stylus/css/*.css css/ To get started right away, you can use this HTML starter template. Just copy/paste this code in the index.html file: <!DOCTYPE html> < html lang = \"en\" itemscope = \"\" itemtype = \"http://schema.org/WebPage\" > < head > < meta charset = \"UTF-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < title > Hello, Skeletonic! </ title > < link href = \"css/skeletonic.min.css\" rel = \"stylesheet\" > < link href = \"css/skeletonic-fonts.min.css\" rel = \"stylesheet\" > < link href = \"css/skeletonic-colors.min.css\" rel = \"stylesheet\" > < link href = \"css/skeletonic-animations.min.css\" rel = \"stylesheet\" > </ head > < body > < div id = \"navigation\" > < input type = \"checkbox\" class = \"hamburger\" id = \"hamburger\" name = \"hamburger\" > < label title = \"Open the menu\" for = \"hamburger\" class = \"hamburger-toggle cl-white\" aria-hidden = \"true\" > < span class = \"hidden\" aria-hidden = \"true\" > Main menu </ span > < span class = \"spinner diagonal part-1\" ></ span > < span class = \"spinner horizontal\" ></ span > < span class = \"spinner diagonal part-2\" ></ span > </ label > < nav id = \"sidebar\" > < ul class = \"nav\" > < li >< a href = \"/\" > Home </ a ></ li > </ ul > </ nav > </ div > < main class = \"container center text-center\" > < h1 > Hello, Skeletonic! </ h1 > < p > Welcome to your new app. </ p > < hr class = \"hr-text\" data-content = \"Skeletonic\" > < div class = \"card info padding-1\" > < div class = \"card-content\" > < h2 > How is Skeletonic for you? </ h2 > < p > \u2b50 We appreciate your star rating and feedback. If you ever have any questions or concerns, we're here for you. In the meantime, have a great day! </ p > < button class = \"primary center\" > Button </ button > < button class = \"secondary center\" > Button </ button > </ div > </ div > < hr class = \"hr-text\" data-content = \"Thank you!\" > </ main > </ body > </ html >","title":"Create Your Site"},{"location":"hello-skeletonic.html#publish-your-site","text":"","title":"Publish Your Site"},{"location":"hello-skeletonic.html#initial-setup","text":"Install the http-server package from npm Open a command prompt / command line window and enter the following: npm install --save-dev http-server and put in your package.json: \"scripts\": { \"start\": \"http-server .\", \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\" }","title":"Initial Setup"},{"location":"hello-skeletonic.html#deploy-your-site","text":"In the terminal window, copy and paste the following command to run the app in a local web server from our directory: npm start This will build and start the app. Once running you should see the following in your console: Starting up http-server, serving . Available on: http://127.0.0.1:8080 http://192.168.86.28:8080 Hit CTRL-C to stop the server","title":"Deploy Your Site"},{"location":"hello-skeletonic.html#preview-your-site","text":"Open your web browser, and visit http://127.0.0.1:8080 You should see the following page: Congratulations on creating, building, and running your first Skeletonic app! \ud83c\udf89","title":"Preview Your Site"},{"location":"animations/blink.html","text":"Blink \u00b6 Overview \u00b6 The Blink animation allows you to apply a blinking effect to an element.","title":"Blink"},{"location":"animations/blink.html#blink","text":"","title":"Blink"},{"location":"animations/blink.html#overview","text":"The Blink animation allows you to apply a blinking effect to an element.","title":"Overview"},{"location":"animations/bounce.html","text":"Bounce \u00b6 Overview \u00b6 The Bounce animation allows you to apply a continuous bouncing effect to an element.","title":"Bounce"},{"location":"animations/bounce.html#bounce","text":"","title":"Bounce"},{"location":"animations/bounce.html#overview","text":"The Bounce animation allows you to apply a continuous bouncing effect to an element.","title":"Overview"},{"location":"animations/chameleon.html","text":"Chameleon \u00b6 Overview \u00b6 The Chameleon animations allows you to change the color of a text or a background, cycling through a predefined range of colors. Chameleon Text \u00b6 The Chameleon Text animation allows you to bounce content. Chameleon Background \u00b6 The Chameleon Background animation allows you to bounce content.","title":"Chameleon"},{"location":"animations/chameleon.html#chameleon","text":"","title":"Chameleon"},{"location":"animations/chameleon.html#overview","text":"The Chameleon animations allows you to change the color of a text or a background, cycling through a predefined range of colors.","title":"Overview"},{"location":"animations/chameleon.html#chameleon-text","text":"The Chameleon Text animation allows you to bounce content.","title":"Chameleon Text"},{"location":"animations/chameleon.html#chameleon-background","text":"The Chameleon Background animation allows you to bounce content.","title":"Chameleon Background"},{"location":"animations/fade.html","text":"Fade \u00b6 Overview \u00b6 The Fade animation allows you to apply a continuous fade-in or fade-out effect to an element. Fade in \u00b6 The Fade in animation allows you to fade content. Fade out \u00b6 The Fade out in animation allows you to fade content.","title":"Fade"},{"location":"animations/fade.html#fade","text":"","title":"Fade"},{"location":"animations/fade.html#overview","text":"The Fade animation allows you to apply a continuous fade-in or fade-out effect to an element.","title":"Overview"},{"location":"animations/fade.html#fade-in","text":"The Fade in animation allows you to fade content.","title":"Fade in"},{"location":"animations/fade.html#fade-out","text":"The Fade out in animation allows you to fade content.","title":"Fade out"},{"location":"animations/pop.html","text":"Pop \u00b6 Overview \u00b6 The Pop animations allows you to cover all or a part of a website by applying a pop-in effect to an element. Pop In \u00b6 The Pop In animation allows you to bounce content.","title":"Pop"},{"location":"animations/pop.html#pop","text":"","title":"Pop"},{"location":"animations/pop.html#overview","text":"The Pop animations allows you to cover all or a part of a website by applying a pop-in effect to an element.","title":"Overview"},{"location":"animations/pop.html#pop-in","text":"The Pop In animation allows you to bounce content.","title":"Pop In"},{"location":"animations/pulsate.html","text":"Pulse \u00b6 Overview \u00b6 The Pulse animation allows you to bounce content.","title":"Pulsate"},{"location":"animations/pulsate.html#pulse","text":"","title":"Pulse"},{"location":"animations/pulsate.html#overview","text":"The Pulse animation allows you to bounce content.","title":"Overview"},{"location":"animations/scale.html","text":"Scale \u00b6 Overview \u00b6 The Scale animation allows you to apply a scale-in effect to an element.","title":"Scale"},{"location":"animations/scale.html#scale","text":"","title":"Scale"},{"location":"animations/scale.html#overview","text":"The Scale animation allows you to apply a scale-in effect to an element.","title":"Overview"},{"location":"animations/shake.html","text":"Shake \u00b6 Overview \u00b6 The Shake animation allows you to bounce content.","title":"Shake"},{"location":"animations/shake.html#shake","text":"","title":"Shake"},{"location":"animations/shake.html#overview","text":"The Shake animation allows you to bounce content.","title":"Overview"},{"location":"animations/spin.html","text":"Spin \u00b6 Overview \u00b6 The Spin animation allows a continuous spin/rotation to an element. It rotates content from the center of origin. Spin Reverse \u00b6 Apply a continuous spin/rotation (opposite direction to animate-spin).","title":"Spin"},{"location":"animations/spin.html#spin","text":"","title":"Spin"},{"location":"animations/spin.html#overview","text":"The Spin animation allows a continuous spin/rotation to an element. It rotates content from the center of origin.","title":"Overview"},{"location":"animations/spin.html#spin-reverse","text":"Apply a continuous spin/rotation (opposite direction to animate-spin).","title":"Spin Reverse"},{"location":"animations/vanish.html","text":"Vanish \u00b6 Overview \u00b6 The Vanish animations allow you to make an element disappear with an animation In or Out. Vanish In \u00b6 The Vanish In animation allows you to bounce content. Vanish Out \u00b6 The Vanish Out animation allows you to bounce content.","title":"Vanish"},{"location":"animations/vanish.html#vanish","text":"","title":"Vanish"},{"location":"animations/vanish.html#overview","text":"The Vanish animations allow you to make an element disappear with an animation In or Out.","title":"Overview"},{"location":"animations/vanish.html#vanish-in","text":"The Vanish In animation allows you to bounce content.","title":"Vanish In"},{"location":"animations/vanish.html#vanish-out","text":"The Vanish Out animation allows you to bounce content.","title":"Vanish Out"},{"location":"animations/wobble.html","text":"Wobble \u00b6 Overview \u00b6 The Wobble animation allows you to bounce content.","title":"Wobble"},{"location":"animations/wobble.html#wobble","text":"","title":"Wobble"},{"location":"animations/wobble.html#overview","text":"The Wobble animation allows you to bounce content.","title":"Overview"},{"location":"animations/zoom.html","text":"Zoom \u00b6 Overview \u00b6 Zoom In \u00b6 The Zoom In allows you to scales content into view, starts very small and scales to full magnification. Zoom Out \u00b6 The Zoom Out allows you to scales content into view, starts very small and scales to full magnification.","title":"Zoom"},{"location":"animations/zoom.html#zoom","text":"","title":"Zoom"},{"location":"animations/zoom.html#overview","text":"","title":"Overview"},{"location":"animations/zoom.html#zoom-in","text":"The Zoom In allows you to scales content into view, starts very small and scales to full magnification.","title":"Zoom In"},{"location":"animations/zoom.html#zoom-out","text":"The Zoom Out allows you to scales content into view, starts very small and scales to full magnification.","title":"Zoom Out"},{"location":"buttons/actions.html","text":"Button actions \u00b6 Overview \u00b6 Contained buttons \u00b6 Call-to-action (CTA) \u00b6 A Call-to-action (CTA) button, depending on the situation, will usually prompt users to sign up/register/buy now/etc. Preview Call to action Markup <button type = \"button\" class = \"primary radius\" >Call to action button</button> Primary button \u00b6 Use this one as the main call to action on interfaces. Preview Primary Markup <button type = \"button\" class = \"primary\" >Primary button</button> Secondary button \u00b6 For secondary actions. Great at keeping the eye focused on a page\u2019s primary imagery. With properly chosen background and well-outlined contrasting border secondary button attracts attention without giving a user overwhelming impression. Preview Secondary Markup <button type = \"button\" class = \"secondary\" >Secondary button</button> Tertiary button \u00b6 Use tertiary buttons in isolation, for less prominent actions, or paired with a Primary or Secondary button, or multiple CTAs around the same subject. Preview Tertiary Markup <button type = \"button\" class = \"tertiary\" >Tertiary button</button> Outlined buttons \u00b6 Outlined buttons display a stroke around a text label. Preview CTA Outline Primary Outline Secondary Outline Tertiary Outline Danger Outline Info Outline Success Outline Warning Outline Markup <button type = \"button\" class = \"primary-outline radius\" >CTA Outline</button> <button type = \"button\" class = \"primary-outline\" >Primary Outline</button> <button type = \"button\" class = \"secondary-outline\" >Secondary Outline</button> <button type = \"button\" class = \"tertiary-outline\" >Tertiary Outline</button> <button type = \"button\" class = \"danger-outline\" >Danger Outline</button> <button type = \"button\" class = \"info-outline\" >Info Outline</button> <button type = \"button\" class = \"success-outline\" >Success Outline</button> <button type = \"button\" class = \"warning-outline\" >Warning Outline</button>","title":"Actions"},{"location":"buttons/actions.html#button-actions","text":"","title":"Button actions"},{"location":"buttons/actions.html#overview","text":"","title":"Overview"},{"location":"buttons/actions.html#contained-buttons","text":"","title":"Contained buttons"},{"location":"buttons/actions.html#call-to-action-cta","text":"A Call-to-action (CTA) button, depending on the situation, will usually prompt users to sign up/register/buy now/etc. Preview Call to action Markup <button type = \"button\" class = \"primary radius\" >Call to action button</button>","title":"Call-to-action (CTA)"},{"location":"buttons/actions.html#primary-button","text":"Use this one as the main call to action on interfaces. Preview Primary Markup <button type = \"button\" class = \"primary\" >Primary button</button>","title":"Primary button"},{"location":"buttons/actions.html#secondary-button","text":"For secondary actions. Great at keeping the eye focused on a page\u2019s primary imagery. With properly chosen background and well-outlined contrasting border secondary button attracts attention without giving a user overwhelming impression. Preview Secondary Markup <button type = \"button\" class = \"secondary\" >Secondary button</button>","title":"Secondary button"},{"location":"buttons/actions.html#tertiary-button","text":"Use tertiary buttons in isolation, for less prominent actions, or paired with a Primary or Secondary button, or multiple CTAs around the same subject. Preview Tertiary Markup <button type = \"button\" class = \"tertiary\" >Tertiary button</button>","title":"Tertiary button"},{"location":"buttons/actions.html#outlined-buttons","text":"Outlined buttons display a stroke around a text label. Preview CTA Outline Primary Outline Secondary Outline Tertiary Outline Danger Outline Info Outline Success Outline Warning Outline Markup <button type = \"button\" class = \"primary-outline radius\" >CTA Outline</button> <button type = \"button\" class = \"primary-outline\" >Primary Outline</button> <button type = \"button\" class = \"secondary-outline\" >Secondary Outline</button> <button type = \"button\" class = \"tertiary-outline\" >Tertiary Outline</button> <button type = \"button\" class = \"danger-outline\" >Danger Outline</button> <button type = \"button\" class = \"info-outline\" >Info Outline</button> <button type = \"button\" class = \"success-outline\" >Success Outline</button> <button type = \"button\" class = \"warning-outline\" >Warning Outline</button>","title":"Outlined buttons"},{"location":"buttons/groups.html","text":"Button Groups \u00b6 Overview \u00b6 Skeletonic CSS allows you to group multiple buttons together on a single line. Use an element of your choice with class .button-group to create a button group: Preview Button 0 Button 1 Button 2 Markup <p class = \"button-group\" > <button class = \"button active\" >Button 0 </button> <button class = \"button default\" >Button 1 </button> <button class = \"button default\" >Button 2 </button> </p>","title":"Groups"},{"location":"buttons/groups.html#button-groups","text":"","title":"Button Groups"},{"location":"buttons/groups.html#overview","text":"Skeletonic CSS allows you to group multiple buttons together on a single line. Use an element of your choice with class .button-group to create a button group: Preview Button 0 Button 1 Button 2 Markup <p class = \"button-group\" > <button class = \"button active\" >Button 0 </button> <button class = \"button default\" >Button 1 </button> <button class = \"button default\" >Button 2 </button> </p>","title":"Overview"},{"location":"buttons/states.html","text":"Button States \u00b6 Overview \u00b6 Text buttons can be placed in front of a variety of backgrounds. Until the button is interacted with, its container isn\u2019t visible. Text button states \u00b6 Skeletonic CSS has multiple buttons states. The button classes can be used on an <a>, <button>, or <input> element. Based on the action triggered, different types of buttons are available. Active State \u00b6 The active state denotes that a button or setting is interactive. Disabled State \u00b6 The disabled state communicates when a component or element isn\u2019t interactive. To disable a button, add the disabled attribute directly to the <button>, or set the disabled attribute on the <fieldset> containing the button. Disabled buttons cannot be interacted with and have no visual interaction effect. Focused State \u00b6 The focused state communicates when a user has highlighted an element using a keyboard or voice. Hovered State \u00b6 The hovered state communicates when a user has placed a cursor above an interactive element. Pressed State \u00b6 The pressed state communicates a user click, tap, or press.","title":"States"},{"location":"buttons/states.html#button-states","text":"","title":"Button States"},{"location":"buttons/states.html#overview","text":"Text buttons can be placed in front of a variety of backgrounds. Until the button is interacted with, its container isn\u2019t visible.","title":"Overview"},{"location":"buttons/states.html#text-button-states","text":"Skeletonic CSS has multiple buttons states. The button classes can be used on an <a>, <button>, or <input> element. Based on the action triggered, different types of buttons are available.","title":"Text button states"},{"location":"buttons/states.html#active-state","text":"The active state denotes that a button or setting is interactive.","title":"Active State"},{"location":"buttons/states.html#disabled-state","text":"The disabled state communicates when a component or element isn\u2019t interactive. To disable a button, add the disabled attribute directly to the <button>, or set the disabled attribute on the <fieldset> containing the button. Disabled buttons cannot be interacted with and have no visual interaction effect.","title":"Disabled State"},{"location":"buttons/states.html#focused-state","text":"The focused state communicates when a user has highlighted an element using a keyboard or voice.","title":"Focused State"},{"location":"buttons/states.html#hovered-state","text":"The hovered state communicates when a user has placed a cursor above an interactive element.","title":"Hovered State"},{"location":"buttons/states.html#pressed-state","text":"The pressed state communicates a user click, tap, or press.","title":"Pressed State"},{"location":"buttons/styles.html","text":"Button Styles \u00b6 Overview \u00b6 Skeletonic comprise several build-in styles: Buttons have multiple styles for colouring that can be set in the css property: Class Description .default Default button style. .primary Indicates the primary action. .secondary Indicates the secondary action. .danger Indicates a dangerous or negative action. .info Make an element to flash. .link Makes a <button> look like an <a> element. .success Make an element to pulsate. .warning Make an element to spin in place. Build-in styles \u00b6 Default \u00b6 Preview Default Markup <button type = \"button\" class = \"default\" >Default</button> Primary \u00b6 Preview Primary Markup <button type = \"button\" class = \"primary\" >Primary</button> Secondary \u00b6 Preview Secondary Markup <button type = \"button\" class = \"secondary\" >Secondary</button> Danger \u00b6 Preview Danger Markup <button type = \"button\" class = \"danger\" >Danger</button> Info \u00b6 Preview Info Markup <button type = \"button\" class = \"info\" >Info</button> Link \u00b6 Preview Link Markup <button type = \"button\" class = \"link\" >Link</button> Success \u00b6 Preview Success Markup <button type = \"button\" class = \"success\" >Success</button> Warning \u00b6 Preview Warning Markup <button type = \"button\" class = \"warning\" >Warning</button>","title":"Styles"},{"location":"buttons/styles.html#button-styles","text":"","title":"Button Styles"},{"location":"buttons/styles.html#overview","text":"Skeletonic comprise several build-in styles: Buttons have multiple styles for colouring that can be set in the css property: Class Description .default Default button style. .primary Indicates the primary action. .secondary Indicates the secondary action. .danger Indicates a dangerous or negative action. .info Make an element to flash. .link Makes a <button> look like an <a> element. .success Make an element to pulsate. .warning Make an element to spin in place.","title":"Overview"},{"location":"buttons/styles.html#build-in-styles","text":"","title":"Build-in styles"},{"location":"buttons/styles.html#default","text":"Preview Default Markup <button type = \"button\" class = \"default\" >Default</button>","title":"Default"},{"location":"buttons/styles.html#primary","text":"Preview Primary Markup <button type = \"button\" class = \"primary\" >Primary</button>","title":"Primary"},{"location":"buttons/styles.html#secondary","text":"Preview Secondary Markup <button type = \"button\" class = \"secondary\" >Secondary</button>","title":"Secondary"},{"location":"buttons/styles.html#danger","text":"Preview Danger Markup <button type = \"button\" class = \"danger\" >Danger</button>","title":"Danger"},{"location":"buttons/styles.html#info","text":"Preview Info Markup <button type = \"button\" class = \"info\" >Info</button>","title":"Info"},{"location":"buttons/styles.html#link","text":"Preview Link Markup <button type = \"button\" class = \"link\" >Link</button>","title":"Link"},{"location":"buttons/styles.html#success","text":"Preview Success Markup <button type = \"button\" class = \"success\" >Success</button>","title":"Success"},{"location":"buttons/styles.html#warning","text":"Preview Warning Markup <button type = \"button\" class = \"warning\" >Warning</button>","title":"Warning"},{"location":"buttons/types.html","text":"Button Types \u00b6 Overview \u00b6 Buttons are used to initialize action, either to go on another page (i.e. call to action on a banner), to act on an item (i.e. save, add or login) or to navigate inside an app (i.e. next or previous). Text button (Low emphasis) \u00b6 Text buttons are typically used for less important actions, including those located in dialogs and cards. In cards, text buttons help maintain an emphasis on card content. Example Text button \u00b6 Preview Link Markup <button type = \"button\" class = \"link\" >Link</button> Outlined Button (Medium emphasis) \u00b6 Outlined buttons are used for more emphasis than text buttons due to the stroke. They contain actions that are important, but aren\u2019t the primary action in an app. Example Outlined Button \u00b6 Preview Outlined Markup <button type = \"button\" class = \"primary-outline\" >Outlined</button> Contained button (High emphasis) \u00b6 Contained buttons have more emphasis, as they use a color fill and shadow. They contain actions that are primary to your app. Example Contained button \u00b6 Preview Contained Markup <button type = \"button\" class = \"primary\" >Contained</button>","title":"Types"},{"location":"buttons/types.html#button-types","text":"","title":"Button Types"},{"location":"buttons/types.html#overview","text":"Buttons are used to initialize action, either to go on another page (i.e. call to action on a banner), to act on an item (i.e. save, add or login) or to navigate inside an app (i.e. next or previous).","title":"Overview"},{"location":"buttons/types.html#text-button-low-emphasis","text":"Text buttons are typically used for less important actions, including those located in dialogs and cards. In cards, text buttons help maintain an emphasis on card content.","title":"Text button (Low emphasis)"},{"location":"buttons/types.html#example-text-button","text":"Preview Link Markup <button type = \"button\" class = \"link\" >Link</button>","title":"Example Text button"},{"location":"buttons/types.html#outlined-button-medium-emphasis","text":"Outlined buttons are used for more emphasis than text buttons due to the stroke. They contain actions that are important, but aren\u2019t the primary action in an app.","title":"Outlined Button (Medium emphasis)"},{"location":"buttons/types.html#example-outlined-button","text":"Preview Outlined Markup <button type = \"button\" class = \"primary-outline\" >Outlined</button>","title":"Example Outlined Button"},{"location":"buttons/types.html#contained-button-high-emphasis","text":"Contained buttons have more emphasis, as they use a color fill and shadow. They contain actions that are primary to your app.","title":"Contained button (High emphasis)"},{"location":"buttons/types.html#example-contained-button","text":"Preview Contained Markup <button type = \"button\" class = \"primary\" >Contained</button>","title":"Example Contained button"},{"location":"cards/adaptive.html","text":"Adaptive card \u00b6 An adaptive card is a customizable card that can contain any combination of text, speech, images, buttons, and input fields. Cards can have multiple properties and attachments. Cards can include buttons which can trigger Card actions. Cards support formatting in the text property only, not in the title or subtitle properties. Formatting can be specified using a subset of XML (HTML) formatting, or Markdown depending on card type. For current and future development Adaptive cards using Markdown formatting is recommended. Formatting support differs between different card types, and rendering of the card can differ slightly between the desktop and the mobile Teams clients, as well as Teams in the desktop browser.","title":"Adaptive"},{"location":"cards/adaptive.html#adaptive-card","text":"An adaptive card is a customizable card that can contain any combination of text, speech, images, buttons, and input fields. Cards can have multiple properties and attachments. Cards can include buttons which can trigger Card actions. Cards support formatting in the text property only, not in the title or subtitle properties. Formatting can be specified using a subset of XML (HTML) formatting, or Markdown depending on card type. For current and future development Adaptive cards using Markdown formatting is recommended. Formatting support differs between different card types, and rendering of the card can differ slightly between the desktop and the mobile Teams clients, as well as Teams in the desktop browser.","title":"Adaptive card"},{"location":"cards/colors.html","text":"Card colors \u00b6 Cards can be used to display specific messages to users. You can use the .warning class to display a yellow warning card or, if you need to display an error message to your users, you can use the .error class to display a red error card. Preview Title Lorem ipsum. Code < div class = \"card\" > < div class = \"card-content\" > < h4 > Title </ h4 > < p > Lorem ipsum. </ p > </ div > </ div >","title":"Colors"},{"location":"cards/colors.html#card-colors","text":"Cards can be used to display specific messages to users. You can use the .warning class to display a yellow warning card or, if you need to display an error message to your users, you can use the .error class to display a red error card. Preview","title":"Card colors"},{"location":"cards/hero.html","text":"Hero card \u00b6 A card that typically contains a single large image, one or more buttons, and text. Properties of a hero card \u00b6 Property Type Description title Rich text Title of the card. Maximum 2 lines. subtitle Rich text Subtitle of the card. Maximum 2 lines. text Rich text Text appears under the subtitle. For formatting options, see card formatting. images Array of images Image displayed at the top of the card. Aspect ratio 16:9. buttons Array of action objects Set of actions applicable to the current card. Maximum 6. tap Action object Activated when the user taps on the card itself.","title":"Hero"},{"location":"cards/hero.html#hero-card","text":"A card that typically contains a single large image, one or more buttons, and text.","title":"Hero card"},{"location":"cards/hero.html#properties-of-a-hero-card","text":"Property Type Description title Rich text Title of the card. Maximum 2 lines. subtitle Rich text Subtitle of the card. Maximum 2 lines. text Rich text Text appears under the subtitle. For formatting options, see card formatting. images Array of images Image displayed at the top of the card. Aspect ratio 16:9. buttons Array of action objects Set of actions applicable to the current card. Maximum 6. tap Action object Activated when the user taps on the card itself.","title":"Properties of a hero card"},{"location":"cards/list.html","text":"List card \u00b6 The list card has been added by Teams to provide functions beyond what the list collection can provide. Properties of a list card Property Type Description title Rich text Title of the card. Maximum 2 lines. items Array of list items buttons Array of action objects Set of actions applicable to the current card. Maximum 6.","title":"List"},{"location":"cards/list.html#list-card","text":"The list card has been added by Teams to provide functions beyond what the list collection can provide. Properties of a list card Property Type Description title Rich text Title of the card. Maximum 2 lines. items Array of list items buttons Array of action objects Set of actions applicable to the current card. Maximum 6.","title":"List card"},{"location":"cards/syntax.html","text":"Basic syntax \u00b6 In order to create a basic card, you will need to: Use .card with a div tag to create the outer container Add the .card-content class to an inner div tag to create the card content These are the basic elements that constitute a basic card layout, as we can see from the following example: <div class = \" flex-12\" > <div class = \"card\" > <div class = \"card-content\" > <h4>Title</h4> <p>Lorem ipsum.</p> </div> </div> </div>","title":"Syntax"},{"location":"cards/syntax.html#basic-syntax","text":"In order to create a basic card, you will need to: Use .card with a div tag to create the outer container Add the .card-content class to an inner div tag to create the card content These are the basic elements that constitute a basic card layout, as we can see from the following example: <div class = \" flex-12\" > <div class = \"card\" > <div class = \"card-content\" > <h4>Title</h4> <p>Lorem ipsum.</p> </div> </div> </div>","title":"Basic syntax"},{"location":"cards/thumbnail.html","text":"Image Card \u00b6 Preview In the same way, we can add an image to our card element. Markup <section class = \"cards flex-12\" > <div class = \"card flex-4\" > <picture> <img src = \"./assets/images/backgrounds/patrick-tomasso-472279.jpg\" alt = \"Photo by Patrick Tomasso on Unsplash\" class = \"rdt\" > </picture> <div class = \"card-content text-left\" > <h4>Top image</h4> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> <p><button class = \"info center size-full-width\" >Button 1 </button></p> </div> </div> <div class = \"card flex-4\" > <div class = \"card-content text-left\" > <h4>Center padding</h4> <picture> <img src = \"./assets/images/backgrounds/fernando-reyes-241702.jpg\" alt = \"Photo by Fernando Reyes on Unsplash\" class = \"img-responsive rd\" /> </picture> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> <p><button class = \"info center size-full-width\" >Button 3 </button></p> </div> </div> <div class = \"card flex-4\" > <div class = \"card-content text-left\" > <h4>Bottom image</h4> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> <p><button class = \"info center size-full-width\" >Button 2 </button></p> </div> <picture> <img src = \"./assets/images/backgrounds/marion-michele-457471.jpg\" alt = \"Photo by Marion Michele on Unsplash\" class = \"rdb\" > </picture> </div> </section>","title":"Thumbnail"},{"location":"cards/thumbnail.html#image-card","text":"Preview In the same way, we can add an image to our card element. Markup <section class = \"cards flex-12\" > <div class = \"card flex-4\" > <picture> <img src = \"./assets/images/backgrounds/patrick-tomasso-472279.jpg\" alt = \"Photo by Patrick Tomasso on Unsplash\" class = \"rdt\" > </picture> <div class = \"card-content text-left\" > <h4>Top image</h4> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> <p><button class = \"info center size-full-width\" >Button 1 </button></p> </div> </div> <div class = \"card flex-4\" > <div class = \"card-content text-left\" > <h4>Center padding</h4> <picture> <img src = \"./assets/images/backgrounds/fernando-reyes-241702.jpg\" alt = \"Photo by Fernando Reyes on Unsplash\" class = \"img-responsive rd\" /> </picture> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> <p><button class = \"info center size-full-width\" >Button 3 </button></p> </div> </div> <div class = \"card flex-4\" > <div class = \"card-content text-left\" > <h4>Bottom image</h4> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> <p><button class = \"info center size-full-width\" >Button 2 </button></p> </div> <picture> <img src = \"./assets/images/backgrounds/marion-michele-457471.jpg\" alt = \"Photo by Marion Michele on Unsplash\" class = \"rdb\" > </picture> </div> </section>","title":"Image Card"},{"location":"cards/types.html","text":"Types of cards \u00b6 This table shows the types of cards available to you: Card type Description Adaptive This card is highly customizable card that can contain any combination of text, speech, images, buttons, and input fields. Hero This card typically contains a single large image, one or more buttons, and a small amount of text. List This card is a scrolling list of items. Thumbnail This card typically contains a single thumbnail image, some short text, and one or more buttons. Common properties for all cards \u00b6 Inline card images \u00b6 The card can contain an inline image by including a link to the publicly available image. For performance purposes, it is highly recommended you host the image on a public content-delivery network (CDN). Images are scaled up or down in size while maintaining the aspect ratio to cover the image area. Images are then cropped from center to achieve the appropriate aspect ratio for the card. Buttons \u00b6 Buttons are shown stacked at the bottom of the card. Button text is always on a single line and is truncated if the text exceeds the button width. Any additional buttons beyond the maximum number supported by the card are not shown. Card formatting \u00b6 You can add rich text formatting to your cards using either Markdown or HTML, depending on the card type. Cards support formatting in the text property only, not in the title or subtitle properties. Formatting can be specified using a subset of XML (HTML) formatting, or Markdown depending on card type. For current and future development Adaptive cards using Markdown formatting is recommended. Formatting support differs between different card types, and rendering of the card can differ slightly between the desktop and the mobile Teams clients, as well as Teams in the desktop browser. You can include an inline image with any Teams card. Images an be formatted as .png, .jpg, or .gif files and must not exceed 1024 \u00d71024 px or 1 MB.","title":"Types"},{"location":"cards/types.html#types-of-cards","text":"This table shows the types of cards available to you: Card type Description Adaptive This card is highly customizable card that can contain any combination of text, speech, images, buttons, and input fields. Hero This card typically contains a single large image, one or more buttons, and a small amount of text. List This card is a scrolling list of items. Thumbnail This card typically contains a single thumbnail image, some short text, and one or more buttons.","title":"Types of cards"},{"location":"cards/types.html#common-properties-for-all-cards","text":"","title":"Common properties for all cards"},{"location":"cards/types.html#inline-card-images","text":"The card can contain an inline image by including a link to the publicly available image. For performance purposes, it is highly recommended you host the image on a public content-delivery network (CDN). Images are scaled up or down in size while maintaining the aspect ratio to cover the image area. Images are then cropped from center to achieve the appropriate aspect ratio for the card.","title":"Inline card images"},{"location":"cards/types.html#buttons","text":"Buttons are shown stacked at the bottom of the card. Button text is always on a single line and is truncated if the text exceeds the button width. Any additional buttons beyond the maximum number supported by the card are not shown.","title":"Buttons"},{"location":"cards/types.html#card-formatting","text":"You can add rich text formatting to your cards using either Markdown or HTML, depending on the card type. Cards support formatting in the text property only, not in the title or subtitle properties. Formatting can be specified using a subset of XML (HTML) formatting, or Markdown depending on card type. For current and future development Adaptive cards using Markdown formatting is recommended. Formatting support differs between different card types, and rendering of the card can differ slightly between the desktop and the mobile Teams clients, as well as Teams in the desktop browser. You can include an inline image with any Teams card. Images an be formatted as .png, .jpg, or .gif files and must not exceed 1024 \u00d71024 px or 1 MB.","title":"Card formatting"},{"location":"install/cdn.html","text":"Install from CDN \u00b6 A pre-bundled package that contains all compiled CSS, components and mixins needed to use is available on CDN. The following table lists alternate CDN locations where Skeletonic Stylus is hosted. CDN URL HTTPS Combo unpkg https://unpkg.com/skeletonic-stylus@1.0.6/css/skeletonic.min.css Yes No jsDelivr https://cdn.jsdelivr.net/npm/skeletonic-stylus@1.0.6/css/skeletonic.min.css Yes Yes","title":"CDN"},{"location":"install/cdn.html#install-from-cdn","text":"A pre-bundled package that contains all compiled CSS, components and mixins needed to use is available on CDN. The following table lists alternate CDN locations where Skeletonic Stylus is hosted. CDN URL HTTPS Combo unpkg https://unpkg.com/skeletonic-stylus@1.0.6/css/skeletonic.min.css Yes No jsDelivr https://cdn.jsdelivr.net/npm/skeletonic-stylus@1.0.6/css/skeletonic.min.css Yes Yes","title":"Install from CDN"},{"location":"install/github.html","text":"Install from GitHub \u00b6 Clone the main repository to get all source files including build scripts: git clone https://github.com/sebastienrousseau/skeletonic-stylus.git","title":"GitHub"},{"location":"install/github.html#install-from-github","text":"Clone the main repository to get all source files including build scripts: git clone https://github.com/sebastienrousseau/skeletonic-stylus.git","title":"Install from GitHub"},{"location":"install/npm.html","text":"Install from NPM \u00b6 To use the Skeletonic Stylus Library, you will need the npm JavaScript package manager . Install the npm command line interface \u00b6 npm is distributed with Node.js which means that when you download Node.js, you automatically get npm installed on your computer. To install Node.js and the npm command line interface using either a Node version manager or a Node installer. Check installation \u00b6 To check if you have Node.js installed, run this command in your terminal: node --version To confirm that you have npm installed you can run this command in your terminal: npm --version Install the Skeletonic Stylus Library via Yarn \u00b6 To install the Skeletonic Stylus Library, you can use the npm JavaScript package manager as follows: npm install skeletonic-stylus Next \u00b6 After you have installed the Skeletonic Stylus Library, create your first app in Getting Started \u2192 Hello Skeletonic .","title":"NPM"},{"location":"install/npm.html#install-from-npm","text":"To use the Skeletonic Stylus Library, you will need the npm JavaScript package manager .","title":"Install from NPM"},{"location":"install/npm.html#install-the-npm-command-line-interface","text":"npm is distributed with Node.js which means that when you download Node.js, you automatically get npm installed on your computer. To install Node.js and the npm command line interface using either a Node version manager or a Node installer.","title":"Install the npm command line interface"},{"location":"install/npm.html#check-installation","text":"To check if you have Node.js installed, run this command in your terminal: node --version To confirm that you have npm installed you can run this command in your terminal: npm --version","title":"Check installation"},{"location":"install/npm.html#install-the-skeletonic-stylus-library-via-yarn","text":"To install the Skeletonic Stylus Library, you can use the npm JavaScript package manager as follows: npm install skeletonic-stylus","title":"Install the Skeletonic Stylus Library via Yarn"},{"location":"install/npm.html#next","text":"After you have installed the Skeletonic Stylus Library, create your first app in Getting Started \u2192 Hello Skeletonic .","title":"Next"},{"location":"install/yarn.html","text":"Install from YARN \u00b6 To use the Skeletonic Stylus Library, you will need the yarn JavaScript package manager JavaScript package manager . Install Yarn \u00b6 Before you start using Yarn, you\u2019ll first need to install it on your system. There are many different ways to install Yarn, but a single one is recommended and cross-platform: Install Yarn 2 or greater via npm \u00b6 It is recommended to install Yarn through the npm package manager , which comes bundled with Node.js when you install it on your system. npm install --global yarn Check installation \u00b6 To confirm that you have yarn installed you can run this command in your terminal: yarn -v Install the Skeletonic Stylus Library via Yarn \u00b6 To install the Skeletonic Stylus Library, you can use the yarn JavaScript package manager as follows: yarn add skeletonic-stylus Next \u00b6 After you have installed the Skeletonic Stylus Library, create your first app in Getting Started \u2192 Hello Skeletonic .","title":"YARN"},{"location":"install/yarn.html#install-from-yarn","text":"To use the Skeletonic Stylus Library, you will need the yarn JavaScript package manager JavaScript package manager .","title":"Install from YARN"},{"location":"install/yarn.html#install-yarn","text":"Before you start using Yarn, you\u2019ll first need to install it on your system. There are many different ways to install Yarn, but a single one is recommended and cross-platform:","title":"Install Yarn"},{"location":"install/yarn.html#install-yarn-2-or-greater-via-npm","text":"It is recommended to install Yarn through the npm package manager , which comes bundled with Node.js when you install it on your system. npm install --global yarn","title":"Install Yarn 2 or greater via npm"},{"location":"install/yarn.html#check-installation","text":"To confirm that you have yarn installed you can run this command in your terminal: yarn -v","title":"Check installation"},{"location":"install/yarn.html#install-the-skeletonic-stylus-library-via-yarn","text":"To install the Skeletonic Stylus Library, you can use the yarn JavaScript package manager as follows: yarn add skeletonic-stylus","title":"Install the Skeletonic Stylus Library via Yarn"},{"location":"install/yarn.html#next","text":"After you have installed the Skeletonic Stylus Library, create your first app in Getting Started \u2192 Hello Skeletonic .","title":"Next"}]}